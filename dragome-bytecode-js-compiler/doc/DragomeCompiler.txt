Dragome Compiler Documentation 

Starting Class (Dragome-bytecode-js-compiler):  
DragomeJsCompiler.java -> compile() 
Calling Class (DragomeCore): 
DragomeCompierLuncher.java -> compileWithMainClass()
Before executing the CompilerConfiguration will be set. 
DragomeJsCompiler: 
Unlike the name suggest it isnt doesnt turn java to JS. It tracks the whole process and creates the JS cache and has configurations on board. Is aware of every class of the classpath. 

Compiler Configuration
Configuration Class that is aware of the current compiler. The mainClass (usually DragmeVisualActivites) and the FileFilter which filters server side classes.
The CompilerConfiguration usually is created at DragomeCompilerLauncher 
The class is not threadsafe and has public variable declarations
The first Assembly will be the Entry point of the client (usually the one that implements DragomeVisualActivity) 
Project: 
Collection of many helper methods and needed variables for the compiling process. Is aware of all Classes in the classpath. Handles visits of Classes, Methods and variables. Keep track on already compiled classes.
This class is not threadsafe and has public variables
ClassUnit: 	
An actual view of a java class with its interfaces and extended classes 
Assembly: 
Writes JS and keeps track on signatures. 
Creates ClassUnits and pass them to a TypeResolver that can later parse it by the parser
The class isnt threadsafe. 
Signatur: 
A signature as String. Has Helpful methods to determine if the signature is a method constructor etc. 





Parser
Visits its predefined class (passes via constructor) and parses its methods / variables / annotations.  It calls Pass1 to convert the collected infos to nodes that can be used to generate JavaScript out of it. Returns a TypeDeclaration with all needed info for the generating process
This class is not threadsafe   

DragomeJavaScriptGenerator
Generates the actual javascript using the information collected from the nodes generated by pass1.  

